<document>
  <properties>
    <title>Introduction</title>
  </properties>
  <body>
    <section name="Overview">
      <p>
        This e-mail endpoint is an <a href="../endpoint.html">endpoint</a> for the SMTP internet mail system. With this endpoint, a workflow can:
      </p>
      <ol>
        <li>
          send an e-mail and block until a reply is received
        </li>
        <li>
          do something (like starting a new conversation) when a new e-mail is received
        </li>
      </ol>
      <p>
        This endpoint is implemented by using JavaMail. Out-going e-mails are sent by talking to a SMTP server. Incoming e-mails can be fetched from various sources, such as POP3, IMAP4, and the <a href="http://en.wikipedia.org/wiki/Maildir">Maildir</a> format.
      </p><p>
        See <a href="apidocs/">javadoc</a> and <a href="../hangman.html">Hangman sample</a> for more details.
      </p>
    </section>
    <section name="Configuring End-point">
      <p>
        This endpoint requires you to configure a few settings through the endpoint URLs or the constructor parameters. There are a large number of other configurations, such as the SMTP server name, that are exposed from JavaMail. See
        <a href="http://java.sun.com/products/javamail/javadocs/com/sun/mail/smtp/package-summary.html">this document for SMTP-related configurations</a>,
        <a href="http://java.sun.com/products/javamail/javadocs/com/sun/mail/pop3/package-summary.html">this document for POP3-related configurations</a>, and
        <a href="http://java.sun.com/products/javamail/javadocs/com/sun/mail/imap/package-summary.html">this document for IMAP-related configurations</a>.
      </p><p>
        To configure this, specify those properties as system properties. If this approach doesn't work for you, instead configure a JavaMail <tt>Session</tt> object manually and then use the <tt>EmailEndPoint</tt> constructor that takes <tt>Session</tt>. The following code illustrates this:
      </p>
<source>
Properties props = System.getProperties();
props.put("mail.smtp.host","mail.sun.com");
Session session = Session.getInstance(props);
new EmailEndPoint( ...., session );
</source>
    </section>
  </body>
</document>