TODO
====
	- users should be able to access their own state information easily
	  from Conversation (like Thread)

	  Turns out this is difficult, as state are often dehydrated.
	  Needs some design thinking.

    - Check out Windows Server 2003 POP3 mail service
    - consider integrating with Exchange Server

    - 'redistribution' page
    
    - consolidate 3rd party license files into one per module

    - plain TCP channel
    - pick up JBI channel

    - write a document about error handling. error in the user code, persistence, etc.

James integration
=================
- Wraps a Dalma to as a phoenix component
  then you can connect to it from a mailet like this (replace UserStore with DalmaPhoenixWrapper):

  (From AvalonListservManager:)
  ComponentManager compMgr = (ComponentManager)getMailetContext().getAttribute(Constants.AVALON_COMPONENT_MANAGER);
  UsersStore usersStore = (UsersStore) compMgr.lookup("org.apache.james.services.UsersStore");

Container Version
==============
- make the log view expandable to show details (stack trace) of error.
- the container should remember which application is STOPPED and which is RUNNING.
  newly installed app should start from STOPPED state since it needs to be configured.

- file a bug asking for the -cp option in jconsole
- have a descriptor
- then expose enough information from JMX so that the web interface can be run on a separate JVM
  - such as information about the current conversation
- build the web interface on top of JMX

- JMX based management features (TBD later)
   see JMX.txt

- implement true auto-redeploy
    currently, we only check directory timestamp

