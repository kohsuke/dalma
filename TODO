TODO
====
    - Check out Windows Server 2003 POP3 mail service
    - consider integrating with Exchange Server

    - 'redistribution' page
    
    - consolidate 3rd party license files into one per module

    - plain TCP channel
    - pick up JBI channel

    - write a document about error handling. error in the user code, persistence, etc.

James integration
=================
- Wraps a Dalma to as a phoenix component
  then you can connect to it from a mailet like this (replace UserStore with DalmaPhoenixWrapper):

  (From AvalonListservManager:)
  ComponentManager compMgr = (ComponentManager)getMailetContext().getAttribute(Constants.AVALON_COMPONENT_MANAGER);
  UsersStore usersStore = (UsersStore) compMgr.lookup("org.apache.james.services.UsersStore");

Logger Hierarchy
================

it's not enough to just expose Logger. More likely you'll just need recorded log records.
(I mean, would you really subscribe to the flow of logs!?)

Aggregated logging makes logging redundant if copies are kept on separate directory.
some kind of database would be nice, or just index, maybe. In such a way that
log entries can be deleted at will. How?


Container Version
=================
- Maven xdoc plugin ignores CDATA section
- workflow log view behaves strangely.
- duck-typing delegation in Stapler
  - how does it implement UIObject?
- javadoc link among modules
- install it on other containers as a test before release
- define a place to put modules
- define module installer screen

- don't send workflow application logs to the system log.

- file a bug against JSP, asking easier way to define functions

- add filter to logview.

- the container should remember which application is STOPPED and which is RUNNING.
  newly installed app should start from STOPPED state since it needs to be configured.

- file a bug asking for the -cp option in jconsole
- then expose enough information from JMX so that the web interface can be run on a separate JVM
  - such as information about the current conversation
- build the web interface on top of JMX

- JMX based management features (TBD later)
   see JMX.txt

- implement true auto-redeploy
    currently, we only check directory timestamp

- consider using commons-vfs. note that it was never released
